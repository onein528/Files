# Copyright (c) 2024 Files Community
# Licensed under the MIT License. See the LICENSE.

name: Files CD

on:
  workflow_dispatch:
    inputs:
      build-branch:
        type: choice
        description: Build branch
        options:
        - 'Preview'
        - 'Stable'
        default: 'Preview'
      publish-to-store:
        type: boolean
        description: Publish to Store as well
        default: 'true'

env:
  CONFIGURATION:              'Release'
  PLATFORM:                   'x64'
  APPX_BUNDLE_PLATFORMS:      'x64|arm64'
  WORKING_DIR:                '${{ github.workspace }}' # D:\a\Files\Files\
  SOLUTION_PATH:              '${{ github.workspace }}\Files.sln'
  ARTIFACTS_STAGING_DIR:      '${{ github.workspace }}\artifacts'
  APPX_PACKAGE_DIR:           '${{ github.workspace }}\artifacts\AppxPackages'
  PACKAGE_PROJECT_DIR:        '${{ github.workspace }}\src\Files.App (Package)'
  PACKAGE_PROJECT_PATH:       '${{ github.workspace }}\src\Files.App (Package)\Files.Package.wapproj'
  PACKAGE_MANIFEST_PATH:      '${{ github.workspace }}\src\Files.App (Package)\Package.appxmanifest'      
  APP_INSTALLER_SIDELOAD_URL: 'https://cdn.files.community/files/${{ github.event.inputs.build-branch }}/'

jobs:
  sideload:
    runs-on: windows-latest
    environment: Deployments
    strategy:
      fail-fast: false
    env:
      BRANCH: 'Sideload${{ github.event.inputs.build-branch }}'

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2
    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: global.json

    - name: Build Files
      run: |
        . './.github/scripts/Configure-AppxManifest.ps1' `
            -Branch                 "$env:BRANCH" `
            -PackageManifestPath    "$env:PACKAGE_MANIFEST_PATH" `
            -WorkingDir             "$env:WORKING_DIR" `
            -Publisher              "$env:SECRET_PUBLISHER_NAME" `
            -SecretBingMapsKey      "$env:SECRET_BINGMAPS_KEY" `
            -SecretSentry           "$env:SECRET_SENTRY" `
            -SecretGitHubOAuthClientId "$env:SECRET_GITHUB_OAUTH_CLIENT_ID"
        . './.github/scripts/Build-AppSolution.ps1' `
            -Branch                 "$env:BRANCH" `
            -SolutionPath           "$env:SOLUTION_PATH" `
            -StartupProjectPath     "$env:PACKAGE_PROJECT_PATH" `
            -Configuration          "$env:CONFIGURATION" `
            -Platform               "$env:PLATFORM" `
            -AppxPackageDir         "$env:APPX_PACKAGE_DIR" `
            -AppInstallerUrl        "$env:APP_INSTALLER_SIDELOAD_URL"
      env:
        SECRET_PUBLISHER_NAME: ${{ secrets.SIDELOAD_PUBLISHER_SECRET }}
        SECRET_BINGMAPS_KEY: ${{ secrets.BING_MAPS_SECRET }}
        SECRET_SENTRY: ${{ secrets.SENTRY_SECRET }}
        SECRET_GITHUB_OAUTH_CLIENT_ID: ${{ secrets.GH_OAUTH_CLIENT_ID }}

    - name: Sign Files with Azure Trusted Signing
      uses: azure/trusted-signing-action@v0.4.0
      with:
        azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
        azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
        endpoint: https://eus.codesigning.azure.net/
        trusted-signing-account-name: ${{ secrets.SIGNING_ACCOUNT_NAME }}
        certificate-profile-name: ${{ secrets.SIGNING_PROFILE_NAME }}
        files-folder: ${{ env.APPX_PACKAGE_DIR }}
        files-folder-filter: msixbundle
        files-folder-recurse: true
        files-folder-depth: 4
        file-digest: SHA256
        timestamp-rfc3161: http://timestamp.acs.microsoft.com
        timestamp-digest: SHA256

    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Upload to Azure blob storage
      run: |
        az storage blob upload-batch `
          --account-name "filescommunity"
          --destination "files"
          --destination-path "${{ github.event.inputs.build-branch }}"
          --source "${{ env.APPX_PACKAGE_DIR }}"
          --overwrite true
        az logout

    - name: Upload the packages to GitHub Actions
      uses: actions/upload-artifact@v4
      with:
        name: 'Appx Packages (${{ env.BRANCH }})'
        path: ${{ env.ARTIFACTS_STAGING_DIR }}

  store:
    runs-on: windows-latest
    environment: Deployments
    strategy:
      fail-fast: false
    env:
      BRANCH: 'Store${{ github.event.inputs.build-branch }}'

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2
    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: global.json

    - name: Build Files
      run: |
        . './.github/scripts/Configure-AppxManifest.ps1' `
            -Branch                 "$env:BRANCH" `
            -PackageManifestPath    "$env:PACKAGE_MANIFEST_PATH" `
            -WorkingDir             "$env:WORKING_DIR" `
            -Publisher              "$env:SECRET_PUBLISHER_NAME" `
            -SecretBingMapsKey      "$env:SECRET_BINGMAPS_KEY" `
            -SecretSentry           "$env:SECRET_SENTRY" `
            -SecretGitHubOAuthClientId "$env:SECRET_GITHUB_OAUTH_CLIENT_ID"
        . './.github/scripts/Build-AppSolution.ps1' `
            -Branch                 "$env:BRANCH" `
            -SolutionPath           "$env:SOLUTION_PATH" `
            -StartupProjectPath     "$env:PACKAGE_PROJECT_PATH" `
            -Configuration          "$env:CONFIGURATION" `
            -Platform               "$env:PLATFORM" `
            -AppxPackageDir         "$env:APPX_PACKAGE_DIR"
      env:
        SECRET_PUBLISHER_NAME: ${{ secrets.STORE_PUBLISHER_SECRET }}
        SECRET_BINGMAPS_KEY: ${{ secrets.BING_MAPS_SECRET }}
        SECRET_SENTRY: ${{ secrets.SENTRY_SECRET }}
        SECRET_GITHUB_OAUTH_CLIENT_ID: ${{ secrets.GH_OAUTH_CLIENT_ID }}

    - name: Upload the packages to GitHub Actions
      uses: actions/upload-artifact@v4
      with:
        name: 'Appx Packages (${{ env.BRANCH }})'
        path: ${{ env.ARTIFACTS_STAGING_DIR }}
